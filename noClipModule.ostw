import "./Vars/Global.ostw";
import "./Vars/Player.ostw";
import "./Macros/hostPlayer.ostw";

define propulsionCheck(): buttonHeldJumpOrCrouch() || throttleOfHP() != Vector(0, 0, 0);

rule: "▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒【Josbird's NoClip Module】▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒"
{
}

rule: "Start noclipping"
if (inEdit() || inCamera())
{
    SetGravity(HP(), 0);
    DisableMovementCollisionWithEnvironment(HP(), true);
    DisableMovementCollisionWithPlayers(HP());
    SetMoveSpeed(HP(), 0);
}

rule: "Stop noclipping"
if (inNormal())
{
    SetGravity(HP(), 100);
    EnableMovementCollisionWithEnvironment(HP());
    EnableMovementCollisionWithPlayers(HP());
    SetMoveSpeed(HP(), 100);
}

rule: "Noclip propulsion"
if (inEdit() || inCamera())
if (
    (propulsionCheck()) == true)
{
    ApplyImpulse(HP(), velocityOfHP() * -1, speedOfHP() * 0.03, Relative.ToWorld, ContraryMotion.Incorporate);
    ApplyImpulse(HostPlayer(), 
    Normalize(
        FacingDirectionOf(HostPlayer()) *
            ZOf(ThrottleOf(HostPlayer())) +
            WorldVectorOf(Left(), HostPlayer(), LocalVector.Rotation) * XOf(ThrottleOf(HostPlayer())) + Up() * (IsButtonHeld(HostPlayer(), Button.Jump) - IsButtonHeld(HostPlayer(), Button.Crouch))), (60 + 400 * IsButtonHeld(HostPlayer(), Button.Ability1) - SpeedOf(HostPlayer())) / 62.5, Relative.ToWorld, ContraryMotion.Incorporate);
    
    MinWait();
    LoopIfConditionIsTrue();
}

rule: "Noclip air resistance"
if (inEdit() || inCamera())
if (!propulsionCheck()) 
if (speedOfIsGreaterHP(0.01))
{
    ApplyImpulse(HP(), velocityOfHP() * -1, speedOfHP() * 0.06, Relative.ToWorld, ContraryMotion.Incorporate);
    MinWait();
    LoopIfConditionIsTrue();
}