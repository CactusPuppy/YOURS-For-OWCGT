import "../Vars/Player.ostw";
import "../Vars/Global.ostw";
import "../Macros/hostPlayer.ostw";
import "../Macros/eventPlayer.ostw";

define hoverColor(): CustomColor(235, 180, 68, 255);
define selectedColor(): CustomColor(235, 163, 61, 255);
define initBotLookPosition(): RayCastHitPosition(eyePositionEP(), eyePositionEP() + directionTowardsEP(HP()) * 5);
define aimVisibleTo(): inEdit() ? HP() : [];
define lookOrbIsHovered(): inEdit() && HP().hostHoverTarget[2] == EntityType.LookOrb &&  HP().hostHoverTarget[1] == EP();
define lookOrbIsSelected(): inEdit() && HP().hostSelectedTarget[2] == EntityType.LookOrb &&  HP().hostSelectedTarget[1] == EP();
define lookOrbColor(): lookOrbIsSelected() == true ? Color.Green : lookOrbIsHovered() == true ? Color.Orange : Color.White;
define lookOrbRadius(): lookOrbIsSelected() ? .150 : lookOrbIsHovered() == true ? .200 : .100;
define lookOrbPosition(): lookOrbIsSelected() ?
placementPositionHP() : EP().botLookPosition;

disabled rule: "▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒【 Bot 】▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒"
{
}
define canSeeAim() : !IsDummyBot(ArrayElement()) && ArrayElement().mode == ModeType.Edit;
rule: "【 Initialize 】▒▒  Bot  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒"
Event.OngoingPlayer
if(EventPlayer() != HP())
if(HasSpawned(EventPlayer()))
{
    EP().botLookPosition = initBotLookPosition();
    EP().botForcedPosition = PositionOf(EP());
    StartForcingPlayerPosition(EP(), EP().botForcedPosition, true);
    CreateBeamEffect(aimVisibleTo(), BeamType.GrappleBeam, UpdateEveryFrame(eyePositionEP() + Vector(0,0.10,0)), UpdateEveryFrame(lookOrbPosition()), Color.SkyBlue, EffectRev.VisibleToPositionAndRadius);
    CreateEffect(
        VisibleTo: aimVisibleTo(),
        Type: Effect.Sphere,
        Color: lookOrbColor(),
        Position: lookOrbPosition(),
        Radius: lookOrbRadius(),
        Reevaluation: EffectRev.VisibleToPositionRadiusAndColor
      );

      StartFacing(
          EP(),
          directionTowardsEP(lookOrbPosition()),
          720,
          Relative.ToWorld, FacingRev.DirectionAndTurnRate);
      EP().initialize = true;
}

void BotDrop() "【 Subroutine 】▒▒  BotDrop ▒▒"
{
    EP().botLookPosition = initBotLookPosition();
}

rule: "Set high gravity if near floor"
Event.OngoingPlayer
if(EP().initialize == true)
if (EP() != HP())
if(HP().hostSelectedTarget[1] != EP())
if (AltitudeOf(EventPlayer()) < 0.500)
{
    // this makes the playermodel properly stand on the ground
    Wait(.100, WaitBehavior.AbortWhenFalse);
    SetGravity(EP(), 100);
    StopForcingPlayerPosition(EP());
    HP().hostSelectedTarget = EmptyArray();
}
rule: "Show outline hovered"
Event.OngoingPlayer
if (EP() != HP())
if(inEdit())
if(EP().initialize == true)
if(HP().hostHoverTarget[1] == EP())
{
 StartForcingPlayerOutlines(EP(), HP(), true, Color.Orange);
}
rule: "Show outline Selected"
Event.OngoingPlayer
if (EP() != HP())
if(inEdit())
if(EP().initialize == true)
if(HP().hostSelectedTarget[1] == EP())
{
 StartForcingPlayerOutlines(EP(), HP(), true, Color.Green);
}

rule: "White outline if not Hovered or Selected"
Event.OngoingPlayer
if (EP() != HP())
if(inEdit())
if(EP().initialize == true)
if(HP().hostSelectedTarget[1] != EP() && HP().hostHoverTarget[1] != EP())
{
 StartForcingPlayerOutlines(EP(), HP(), true, Color.Black);
}

rule: "Hide outline if not Hovered or Selected"
Event.OngoingPlayer
if(EP().initialize == true)
if (EP() != HP())
if(notInEdit())
{
 StopForcingPlayerOutlines(EP(), HP());
}
rule: "On Death"
Event.OnDeath
if (IsDummyBot(EventPlayer()) == true) {
    DestroyDummyBot(TeamOf(EP()), SlotOf(EP()));
    MinWait();
    updateSelectionArray();
    if(HP().hostSelectedTarget[1] == EP())
    {
        HP().hostSelectedTarget = EmptyArray();
    }
    if(HP().hostHoverTarget[1] == EP())
    {
        HP().hostHoverTarget = EmptyArray();
    }
}
